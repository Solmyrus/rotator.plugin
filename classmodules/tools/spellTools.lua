---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Vojta.
--- DateTime: 17.03.2022 13:04
---
local _, E = ...
E.SPELL_TOOLS = {}
st = E.SPELL_TOOLS


function st:isUsableSpell(spellname)
    if not IsUsableSpell(spellname) then return false end

    local start, duration = GetSpellCooldown(spellname)
    if start == nil or duration == nil then return false end

    return (start + duration - E.CONSTANTS.PRECAST_TIME) < GetTime()
end

function st:isUsableBySpellAndDebuff(spellname, debuffname, playerAura, remainingTime)
    if not IsUsableSpell(spellname) then return false end
    if st.isAuraOnTarget(self, debuffname, playerAura, remainingTime + E.CONSTANTS.PRECAST_TIME) then return false end

    local start, duration = GetSpellCooldown(spellname)
    if start == nil or duration == nil then return false end
    return (start + duration - E.CONSTANTS.PRECAST_TIME) < GetTime()
end

function st:isAuraOnTarget(auraname, playerAura, remainingTime)
    for i = 0, 50 do
        local modifier = "HARMFUL";
        if (playerAura) then
            modifier = "HARMFUL|PLAYER";
        end

        local name, _, _, _, _, expirationTime = UnitAura("target", i, modifier)

        if (auraname == name) then
            local actualRemainingTime = expirationTime - GetTime();

            if (actualRemainingTime < remainingTime) then
                return false
            end
            return true
        end
    end

    return false;
end


function st:isAuraOnPlayer(auraname, remainingTime)
    for i = 0, 50 do
        local modifier = "HELPFUL";

        local name, _, _, _, _, expirationTime = UnitAura("player", i, modifier)

        if (auraname == name) then
            local actualRemainingTime = expirationTime - GetTime();

            if (actualRemainingTime < remainingTime) then
                return false
            end
            return true
        end
    end

    return false;
end

function st:getSpellCD(spellID)
    local startTime, duration = GetSpellCooldown(spellID)
    return startTime + duration - GetTime()
end

function st:getItemCD(itemID)
    local startTime, duration, enable = GetItemCooldown(itemID)
    return startTime + duration - GetTime()
end

function st:getTrinket1CD()
    return st.getInventoryItemCD(self,13)
end

function st:getTrinket2CD()
    return st.getInventoryItemCD(self,14)
end

function st:getInventoryItemCD(itemSlot)
    local startTime, duration, enable = GetInventoryItemCooldown("player", itemSlot)
    return startTime + duration - GetTime()
end
