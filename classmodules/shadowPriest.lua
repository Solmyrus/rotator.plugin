---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Vojta.
--- DateTime: 02.03.2022 9:34
---
local _, E = ...

E.SHADOW_PRIEST_DATA = {}
shp = E.SHADOW_PRIEST_DATA
bf = E.BUTTON_FACTORY
st = E.SPELL_TOOLS

function shp:init()
    print("Initializing SHP")

    shp.frame = CreateFrame("Frame", "BDruidFrame", UIParent)

    shp.frame:SetFrameStrata("TOOLTIP")
    shp.frame:SetWidth(150)
    shp.frame:SetHeight(120)

    shp.combatTexture = shp.frame:CreateTexture(nil, "BACKGROUND")
    shp.combatTexture:SetPoint("BOTTOMLEFT", 0, 90)
    shp.combatTexture:SetSize(30, 30)


    shp.activeTexture = shp.frame:CreateTexture(nil, "BACKGROUND")
    shp.activeTexture:SetPoint("BOTTOMLEFT", 30, 90)
    shp.activeTexture:SetSize(120, 30)

    shp.toggleButtons = {}
    shp.activatingButtons = {}

    bf.setGlobalVariables(self, 30,30)

    shp.toggleButtons.mindBlastButton = bf.createToggleButton(self,0,2, shp.frame, 136224)
    shp.toggleButtons.vampiricTouchButton = bf.createToggleButton(self,1,2, shp.frame, 135978)
    shp.toggleButtons.swPainButton = bf.createToggleButton(self,2,2, shp.frame, 136207)
    shp.toggleButtons.vampiricEmbraceButton = bf.createToggleButton(self,3,2, shp.frame, 136230)
    shp.toggleButtons.mindFlayButton = bf.createToggleButton(self,4,2, shp.frame, 136208)


    shp.frame:SetPoint("CENTER", 0, 0)
    shp.frame:SetMovable(true)
    shp.frame:EnableMouse(true)
    shp.frame:RegisterForDrag("LeftButton")
    shp.frame:SetScript("OnDragStart", shp.frame.StartMoving)
    shp.frame:SetScript("OnDragStop", shp.frame.StopMovingOrSizing)

    shp.actualizeFrame()
    shp.frame:Hide()

end

function shp:load()
    shp.frame:Show()
    print("Loading BALA")
end

function shp:unload()
    shp.frame:Hide()
    print("Unloading BALA")
end

function shp:update()

    local serializationData = E.serializationData

    serializationData.profile = "bd_01";

    serializationData.pmb = st.isUsableSpell(self,"Mind Blast")
    serializationData.pvt = st.isUsableBySpellAndDebuff(self,"Vampiric Touch", "Vampiric Touch", true, 0)
    serializationData.pswp = st.isUsableBySpellAndDebuff(self,"Shadow Word: Pain", "Shadow Word: Pain", true, 0)
    serializationData.pve = st.isUsableBySpellAndDebuff(self,"Vampiric Embrace", "Vampiric Embrace", true, 0)
    serializationData.pmf = st.isUsableSpell(self,"Mind Flay")


    serializationData.pmb = shp.toggleButtons.mindBlastButton.value
    serializationData.pvt = shp.toggleButtons.vampiricTouchButton.value
    serializationData.pswp = shp.toggleButtons.swPainButton.value
    serializationData.pve = shp.toggleButtons.vampiricEmbraceButton.value
    serializationData.pmf = shp.toggleButtons.mindFlayButton.value

    shp.actualizeFrame()
end

function shp:actualizeFrame()
    if UnitAffectingCombat("Player") then
        shp.combatTexture:SetColorTexture(0,1,0,0.5)
    else
        shp.combatTexture:SetColorTexture(1,0,0,0.5)
    end

    if E.active then
        shp.activeTexture:SetColorTexture(0,1,0,0.5)
    else
        if UnitAffectingCombat("Player") then
            shp.activeTexture:SetColorTexture(1,0.5,0,0.5)
        else
            shp.activeTexture:SetColorTexture(1,0,0,0.5)
        end
    end


    shp.toggleButtons.mindBlastButton.update()
    shp.toggleButtons.vampiricTouchButton.update()
    shp.toggleButtons.swPainButton.update()
    shp.toggleButtons.vampiricEmbraceButton.update()
    shp.toggleButtons.mindFlayButton.update()

end

E.CLASS_CONFIGURATIONS["SHADOW_PRIEST"] = {
    ['profileName'] = 'shadowpriest',
    ['init'] = shp.init,
    ['load'] = shp.load,
    ['unload'] = shp.unload,
    ['update'] = shp.update,
    ['toggleFunctions'] = {}
}
